
DEBUG:[WinMain()][SUCCESS] Log File Created Successfully
DEBUG:[WinMain()][SUCCESS] Class Registered Successfully
DEBUG:[WndProc()] WM_CREATE Recieved
DEBUG:[WinMain()][SUCCESS] CreateWindowEx() Done -> Window Created

DEBUG:------------------------------------Inside[initialize()]------------------------------------

DEBUG:------------------------------------Inside[createVulkanInstance()]------------------------------------

DEBUG:------------------------------------Inside[fillInstanceExtensionNames()]------------------------------------
DEBUG:[fillInstanceExtensionNames][SUCCESS] vkEnumerateInstanceExtensionProperties() first call
DEBUG:[fillInstanceExtensionNames][SUCCESS] Memory allocated for VkExtensionProperties array
DEBUG:[fillInstanceExtensionNames][SUCCESS] vkEnumerateInstanceExtensionProperties() Second call
DEBUG:[fillInstanceExtensionNames][SUCCESS] Memory allocated for instanceExtensionNames_array
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[0] = VK_KHR_surface
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[1] = VK_KHR_win32_surface
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[2] = VK_KHR_external_memory_capabilities
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[3] = VK_KHR_external_semaphore_capabilities
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[4] = VK_KHR_external_fence_capabilities
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[5] = VK_KHR_get_physical_device_properties2
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[6] = VK_KHR_get_surface_capabilities2
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[7] = VK_KHR_device_group_creation
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[8] = VK_EXT_swapchain_colorspace
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[9] = VK_KHR_display
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[10] = VK_KHR_get_display_properties2
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[11] = VK_KHR_surface_protected_capabilities
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[12] = VK_EXT_debug_report
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[13] = VK_EXT_debug_utils
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[14] = VK_EXT_direct_mode_display
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[15] = VK_EXT_surface_maintenance1
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[16] = VK_NV_external_memory_capabilities
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[17] = VK_KHR_portability_enumeration
DEBUG:[fillInstanceExtensionNames][INFO] Vulkan instance Extension Name[18] = VK_LUNARG_direct_driver_loading
DEBUG:[fillInstanceExtensionNames][SUCCESS] VK_KHR_SURFACE_EXTENSION_NAME found
DEBUG:[fillInstanceExtensionNames][SUCCESS] VK_KHR_WIN32_SURFACE_EXTENSION_NAME found
DEBUG:[fillInstanceExtensionNames][INFO] Enabled Extension Name [0]= VK_KHR_surface
DEBUG:[fillInstanceExtensionNames][INFO] Enabled Extension Name [1]= VK_KHR_win32_surface
DEBUG:------------------------------------Done [fillInstanceExtensionNames()]------------------------------------

DEBUG:[createVulkanInstance][SUCCESS] fillInstanceExtensionNames()
DEBUG:[createVulkanInstance][SUCCESS]
DEBUG:------------------------------------Done [createVulkanInstance()]------------------------------------

DEBUG:[initialize][SUCCESS] createVulkanInstance()

DEBUG:------------------------------------Inside[getSupportedSurface()]------------------------------------
DEBUG:[getSupportedSurface][SUCCESS] vkCreateWin32SurfaceKHR()
DEBUG:------------------------------------Done [getSupportedSurface()]------------------------------------

DEBUG:[initialize][SUCCESS] getSupportedSurface()

DEBUG:------------------------------------Inside[getPhysicalDevice()]------------------------------------
DEBUG:[getPhysicalDevice][SUCCESS] vkEnumeratePhysicalDevices() First Call
DEBUG:[getPhysicalDevice][SUCCESS] Memory allocated for vkPhysicalDevice_array
DEBUG:[getPhysicalDevice][SUCCESS] vkEnumeratePhysicalDevices() Second Call
DEBUG:[getPhysicalDevice][SUCCESS] Graphics enabled vkPhysicalDevice_Selected index = 0
DEBUG:[getPhysicalDevice][SUCCESS] Graphics enabled graphicsQueueFamilyIndex_Selected index = 0
DEBUG:[getPhysicalDevice][SUCCESS] Free isQueueSurfaceSupported_array
DEBUG:[getPhysicalDevice][SUCCESS] Free vkQueueFamilyProperties_array
DEBUG:[getPhysicalDevice][SUCCESS] Graphics enabled vkPhysicalDevice_Selected index= 0
DEBUG:[getPhysicalDevice][SUCCESS] Graphics enabled graphicsQueueFamilyIndex_Selected = 0
DEBUG:[getPhysicalDevice][SUCCESS] Found graphics enabled physical device
DEBUG:[getPhysicalDevice][INFO] Selected Physical Device Support Tissilation Shader
DEBUG:[getPhysicalDevice][INFO] Selected Physical Device Support Geometry Shader
DEBUG:------------------------------------Done [getPhysicalDevice()]------------------------------------

DEBUG:[initialize][SUCCESS] getPhysicalDevice()

DEBUG:------------------------------------Inside[printVkInfo()]------------------------------------
DEBUG:[printVkInfo][INFO] ******************************DEVICE 0 ******************************
DEBUG:[printVkInfo][INFO] API Version = 1 3 278
DEBUG:[printVkInfo][INFO] Device Name = NVIDIA GeForce GTX 1650
DEBUG:[printVkInfo][INFO] Device Type = Descete GPU (dGPU)
DEBUG:[printVkInfo][INFO] Device Vendor ID = 0x10de
DEBUG:[printVkInfo][INFO] Device ID = 0x1f91
DEBUG:[printVkInfo][INFO] ********************************************************************
DEBUG:[printVkInfo][INFO] ******************************DEVICE 1 ******************************
DEBUG:[printVkInfo][INFO] API Version = 1 1 98
DEBUG:[printVkInfo][INFO] Device Name = Intel(R) UHD Graphics 630
DEBUG:[printVkInfo][INFO] Device Type = Integrated GPU (iGPU)
DEBUG:[printVkInfo][INFO] Device Vendor ID = 0x8086
DEBUG:[printVkInfo][INFO] Device ID = 0x3e9b
DEBUG:[printVkInfo][INFO] ********************************************************************
DEBUG:[printVkInfo][SUCCESS] Free vkPhysicalDevice_array
DEBUG:------------------------------------Done [printVkInfo()]------------------------------------

DEBUG:[initialize][SUCCESS] printVkInfo()

DEBUG:------------------------------------Inside[createVulkanDevice()]------------------------------------

DEBUG:------------------------------------Inside[fillDeviceExtensionNames()]------------------------------------
DEBUG:[fillDeviceExtensionNames][SUCCESS] vkEnumerateDeviceExtensionProperties() first call
DEBUG:[fillDeviceExtensionNames][SUCCESS] vkEnumerateDeviceExtensionProperties() Second call
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[0] = VK_KHR_16bit_storage
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[1] = VK_KHR_8bit_storage
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[2] = VK_KHR_bind_memory2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[3] = VK_KHR_buffer_device_address
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[4] = VK_KHR_calibrated_timestamps
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[5] = VK_KHR_copy_commands2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[6] = VK_KHR_create_renderpass2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[7] = VK_KHR_dedicated_allocation
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[8] = VK_KHR_depth_stencil_resolve
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[9] = VK_KHR_descriptor_update_template
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[10] = VK_KHR_device_group
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[11] = VK_KHR_draw_indirect_count
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[12] = VK_KHR_driver_properties
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[13] = VK_KHR_dynamic_rendering
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[14] = VK_KHR_dynamic_rendering_local_read
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[15] = VK_KHR_external_fence
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[16] = VK_KHR_external_fence_win32
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[17] = VK_KHR_external_memory
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[18] = VK_KHR_external_memory_win32
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[19] = VK_KHR_external_semaphore
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[20] = VK_KHR_external_semaphore_win32
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[21] = VK_KHR_format_feature_flags2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[22] = VK_KHR_fragment_shader_barycentric
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[23] = VK_KHR_fragment_shading_rate
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[24] = VK_KHR_get_memory_requirements2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[25] = VK_KHR_global_priority
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[26] = VK_KHR_image_format_list
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[27] = VK_KHR_imageless_framebuffer
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[28] = VK_KHR_index_type_uint8
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[29] = VK_KHR_line_rasterization
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[30] = VK_KHR_load_store_op_none
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[31] = VK_KHR_maintenance1
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[32] = VK_KHR_maintenance2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[33] = VK_KHR_maintenance3
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[34] = VK_KHR_maintenance4
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[35] = VK_KHR_maintenance5
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[36] = VK_KHR_maintenance6
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[37] = VK_KHR_map_memory2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[38] = VK_KHR_multiview
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[39] = VK_KHR_pipeline_executable_properties
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[40] = VK_KHR_pipeline_library
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[41] = VK_KHR_present_id
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[42] = VK_KHR_present_wait
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[43] = VK_KHR_push_descriptor
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[44] = VK_KHR_relaxed_block_layout
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[45] = VK_KHR_sampler_mirror_clamp_to_edge
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[46] = VK_KHR_sampler_ycbcr_conversion
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[47] = VK_KHR_separate_depth_stencil_layouts
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[48] = VK_KHR_shader_atomic_int64
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[49] = VK_KHR_shader_clock
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[50] = VK_KHR_shader_draw_parameters
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[51] = VK_KHR_shader_expect_assume
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[52] = VK_KHR_shader_float16_int8
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[53] = VK_KHR_shader_float_controls
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[54] = VK_KHR_shader_float_controls2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[55] = VK_KHR_shader_integer_dot_product
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[56] = VK_KHR_shader_maximal_reconvergence
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[57] = VK_KHR_shader_non_semantic_info
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[58] = VK_KHR_shader_quad_control
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[59] = VK_KHR_shader_subgroup_extended_types
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[60] = VK_KHR_shader_subgroup_rotate
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[61] = VK_KHR_shader_subgroup_uniform_control_flow
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[62] = VK_KHR_shader_terminate_invocation
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[63] = VK_KHR_spirv_1_4
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[64] = VK_KHR_storage_buffer_storage_class
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[65] = VK_KHR_swapchain
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[66] = VK_KHR_swapchain_mutable_format
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[67] = VK_KHR_synchronization2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[68] = VK_KHR_timeline_semaphore
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[69] = VK_KHR_uniform_buffer_standard_layout
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[70] = VK_KHR_variable_pointers
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[71] = VK_KHR_vertex_attribute_divisor
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[72] = VK_KHR_video_decode_h264
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[73] = VK_KHR_video_decode_h265
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[74] = VK_KHR_video_decode_queue
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[75] = VK_KHR_video_encode_h264
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[76] = VK_KHR_video_encode_h265
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[77] = VK_KHR_video_encode_queue
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[78] = VK_KHR_video_maintenance1
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[79] = VK_KHR_video_queue
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[80] = VK_KHR_vulkan_memory_model
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[81] = VK_KHR_win32_keyed_mutex
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[82] = VK_KHR_workgroup_memory_explicit_layout
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[83] = VK_KHR_zero_initialize_workgroup_memory
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[84] = VK_EXT_4444_formats
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[85] = VK_EXT_attachment_feedback_loop_dynamic_state
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[86] = VK_EXT_attachment_feedback_loop_layout
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[87] = VK_EXT_blend_operation_advanced
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[88] = VK_EXT_border_color_swizzle
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[89] = VK_EXT_buffer_device_address
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[90] = VK_EXT_calibrated_timestamps
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[91] = VK_EXT_color_write_enable
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[92] = VK_EXT_conditional_rendering
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[93] = VK_EXT_conservative_rasterization
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[94] = VK_EXT_custom_border_color
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[95] = VK_EXT_depth_bias_control
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[96] = VK_EXT_depth_clamp_zero_one
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[97] = VK_EXT_depth_clip_control
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[98] = VK_EXT_depth_clip_enable
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[99] = VK_EXT_depth_range_unrestricted
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[100] = VK_EXT_descriptor_buffer
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[101] = VK_EXT_descriptor_indexing
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[102] = VK_EXT_discard_rectangles
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[103] = VK_EXT_dynamic_rendering_unused_attachments
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[104] = VK_EXT_extended_dynamic_state
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[105] = VK_EXT_extended_dynamic_state2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[106] = VK_EXT_extended_dynamic_state3
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[107] = VK_EXT_external_memory_host
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[108] = VK_EXT_fragment_shader_interlock
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[109] = VK_EXT_full_screen_exclusive
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[110] = VK_EXT_global_priority
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[111] = VK_EXT_global_priority_query
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[112] = VK_EXT_graphics_pipeline_library
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[113] = VK_EXT_hdr_metadata
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[114] = VK_EXT_host_image_copy
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[115] = VK_EXT_host_query_reset
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[116] = VK_EXT_image_2d_view_of_3d
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[117] = VK_EXT_image_robustness
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[118] = VK_EXT_image_sliced_view_of_3d
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[119] = VK_EXT_image_view_min_lod
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[120] = VK_EXT_index_type_uint8
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[121] = VK_EXT_inline_uniform_block
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[122] = VK_EXT_line_rasterization
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[123] = VK_EXT_load_store_op_none
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[124] = VK_EXT_memory_budget
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[125] = VK_EXT_memory_priority
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[126] = VK_EXT_mesh_shader
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[127] = VK_EXT_multi_draw
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[128] = VK_EXT_mutable_descriptor_type
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[129] = VK_EXT_nested_command_buffer
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[130] = VK_EXT_non_seamless_cube_map
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[131] = VK_EXT_pageable_device_local_memory
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[132] = VK_EXT_pci_bus_info
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[133] = VK_EXT_pipeline_creation_cache_control
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[134] = VK_EXT_pipeline_creation_feedback
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[135] = VK_EXT_pipeline_robustness
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[136] = VK_EXT_post_depth_coverage
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[137] = VK_EXT_primitive_topology_list_restart
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[138] = VK_EXT_primitives_generated_query
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[139] = VK_EXT_private_data
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[140] = VK_EXT_provoking_vertex
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[141] = VK_EXT_queue_family_foreign
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[142] = VK_EXT_robustness2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[143] = VK_EXT_sample_locations
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[144] = VK_EXT_sampler_filter_minmax
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[145] = VK_EXT_scalar_block_layout
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[146] = VK_EXT_separate_stencil_usage
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[147] = VK_EXT_shader_atomic_float
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[148] = VK_EXT_shader_demote_to_helper_invocation
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[149] = VK_EXT_shader_image_atomic_int64
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[150] = VK_EXT_shader_module_identifier
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[151] = VK_EXT_shader_object
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[152] = VK_EXT_shader_subgroup_ballot
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[153] = VK_EXT_shader_subgroup_vote
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[154] = VK_EXT_shader_viewport_index_layer
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[155] = VK_EXT_subgroup_size_control
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[156] = VK_EXT_swapchain_maintenance1
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[157] = VK_EXT_texel_buffer_alignment
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[158] = VK_EXT_tooling_info
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[159] = VK_EXT_transform_feedback
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[160] = VK_EXT_vertex_attribute_divisor
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[161] = VK_EXT_vertex_input_dynamic_state
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[162] = VK_EXT_ycbcr_2plane_444_formats
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[163] = VK_EXT_ycbcr_image_arrays
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[164] = VK_NV_acquire_winrt_display
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[165] = VK_NV_clip_space_w_scaling
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[166] = VK_NV_compute_shader_derivatives
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[167] = VK_NV_copy_memory_indirect
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[168] = VK_NV_corner_sampled_image
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[169] = VK_NV_coverage_reduction_mode
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[170] = VK_NV_cuda_kernel_launch
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[171] = VK_NV_dedicated_allocation
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[172] = VK_NV_dedicated_allocation_image_aliasing
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[173] = VK_NV_descriptor_pool_overallocation
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[174] = VK_NV_device_diagnostic_checkpoints
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[175] = VK_NV_device_diagnostics_config
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[176] = VK_NV_device_generated_commands
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[177] = VK_NV_device_generated_commands_compute
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[178] = VK_NV_external_memory
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[179] = VK_NV_external_memory_win32
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[180] = VK_NV_fill_rectangle
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[181] = VK_NV_fragment_coverage_to_color
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[182] = VK_NV_fragment_shader_barycentric
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[183] = VK_NV_fragment_shading_rate_enums
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[184] = VK_NV_framebuffer_mixed_samples
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[185] = VK_NV_geometry_shader_passthrough
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[186] = VK_NV_inherited_viewport_scissor
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[187] = VK_NV_linear_color_attachment
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[188] = VK_NV_low_latency
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[189] = VK_NV_low_latency2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[190] = VK_NV_memory_decompression
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[191] = VK_NV_mesh_shader
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[192] = VK_NV_raw_access_chains
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[193] = VK_NV_representative_fragment_test
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[194] = VK_NV_sample_mask_override_coverage
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[195] = VK_NV_scissor_exclusive
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[196] = VK_NV_shader_atomic_float16_vector
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[197] = VK_NV_shader_image_footprint
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[198] = VK_NV_shader_sm_builtins
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[199] = VK_NV_shader_subgroup_partitioned
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[200] = VK_NV_shading_rate_image
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[201] = VK_NV_viewport_array2
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[202] = VK_NV_viewport_swizzle
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[203] = VK_NV_win32_keyed_mutex
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[204] = VK_NVX_binary_import
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[205] = VK_NVX_image_view_handle
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[206] = VK_NVX_multiview_per_view_attributes
DEBUG:[fillDeviceExtensionNames][INFO] Vulkan Device Extension Name[207] = VK_AMD_buffer_marker
DEBUG:[fillDeviceExtensionNames][SUCCESS] VK_KHR_SWAPCHAIN_EXTENSION_NAME found
DEBUG:[fillDeviceExtensionNames][INFO] Enabled Device Extension Name [0]= VK_KHR_swapchain
DEBUG:------------------------------------Done [fillDeviceExtensionNames()]------------------------------------

DEBUG:[cretaeVulkanDevice][SUCCESS] fillDeviceExtensionNames()
DEBUG:[cretaeVulkanDevice][SUCCESS] vkCreateDevice()
DEBUG:------------------------------------Done [createVulkanDevice()]------------------------------------

DEBUG:[initialize][SUCCESS] createVulkanDevice()

DEBUG:------------------------------------Inside[getDeviceQueue()]------------------------------------
DEBUG:[getDeviceQueue][SUCCESS] vkGetDeviceQueue()
DEBUG:------------------------------------Done [getDeviceQueue()]------------------------------------


DEBUG:------------------------------------Inside[createSwapchain()]------------------------------------

DEBUG:------------------------------------Inside[getPhysicalDeviceSurfaceFormatAndColorSpace()]------------------------------------
DEBUG:[getPhysicalDeviceSurfaceFormatAndColorSpace][SUCCESS] vkGetPhysicalDeviceSurfaceFormatsKHR() first call
DEBUG:[getPhysicalDeviceSurfaceFormatAndColorSpace][SUCCESS] vkGetPhysicalDeviceSurfaceFormatsKHR() second call
DEBUG:[getPhysicalDeviceSurfaceFormatAndColorSpace][SUCCESS] free vkSurfaceFormatKHR_array[]
DEBUG:[getPhysicalDeviceSurfaceFormatAndColorSpace][SUCCESS] free vkSurfaceFormatKHR_array[]
DEBUG:------------------------------------Done [getPhysicalDeviceSurfaceFormatAndColorSpace()]------------------------------------

DEBUG:[createSwapchain][SUCCESS] getPhysicalDeviceSurfaceFormatAndColorSpace()
DEBUG:[createSwapchain][SUCCESS] vkGetPhysicalDeviceSurfaceCapabilitiesKHR()
DEBUG:[createSwapchain][SUCCESS] if vkExtend2D_Swapchain.width  = 784
DEBUG:[createSwapchain][SUCCESS] if vkExtend2D_Swapchain.height = 561

DEBUG:------------------------------------Inside[getPhysicalDevicePresentModeKHR()]------------------------------------
DEBUG:[getPhysicalDevicePresentModeKHR][SUCCESS] vkGetPhysicalDeviceSurfacePresentModesKHR() first call
DEBUG:[getPhysicalDevicePresentModeKHR][SUCCESS] vkGetPhysicalDeviceSurfacePresentModesKHR() second call
DEBUG:[getPhysicalDevicePresentModeKHR][INFO] vkGetPhysicalDeviceSurfacePresentModesKHR() vkPresentModeKHR = VK_PRESENT_MODE_MAILBOX_KHR
DEBUG:[getPhysicalDevicePresentModeKHR][SUCCESS] free vkPresentModeKHR_array[]
DEBUG:------------------------------------Done [getPhysicalDevicePresentModeKHR()]------------------------------------

DEBUG:[createSwapchain][SUCCESS] getPhysicalDevicePresentModeKHR()
DEBUG:[createSwapchain][SUCCESS] vkCreateSwapchainKHR()
DEBUG:------------------------------------Done [createSwapchain()]------------------------------------

DEBUG:[initialize][SUCCESS] createSwapchain()

DEBUG:------------------------------------Inside[createImagesAndImageViews()]------------------------------------
DEBUG:[createImagesAndImageViews][SUCCESS] vkGetSwapchainImagesKHR() first call
DEBUG:[createImagesAndImageViews][SUCCESS] vkGetSwapchainImagesKHR() first call swapchainImageCount = 2
DEBUG:[createImagesAndImageViews][SUCCESS] vkGetSwapchainImagesKHR() second call
DEBUG:[createImagesAndImageViews][SUCCESS] vkGetSwapchainImagesKHR() second call swapchainImageCount = 2
DEBUG:[createImagesAndImageViews][SUCCESS] vkCreateImageView() i = 0
DEBUG:[createImagesAndImageViews][SUCCESS] vkCreateImageView() i = 1
DEBUG:------------------------------------Done [createImagesAndImageViews()]------------------------------------

DEBUG:[initialize][SUCCESS] createImagesAndImageViews()
DEBUG:------------------------------------Done [initialize()]------------------------------------


DEBUG:[WINMAIN][SUCCESS] initialize()
DEBUG:[WINMAIN()][SUCCESS] ShowWindow()
DEBUG:[WINMAIN()][SUCCESS] SetForegroundWindow()
DEBUG:[WINMAIN()][SUCCESS] SetFocus()
DEBUG:[WndProc()] WM_DESTROY Recieved

DEBUG:------------------------------------Inside[uninitialize()]------------------------------------
DEBUG:[uninitialize()][SUCCESS] vkDeviceWaitIdle()
DEBUG:[uninitialize()][SUCCESS] vkDestroyImageView() = 0
DEBUG:[uninitialize()][SUCCESS] vkDestroyImageView() = 1
DEBUG:[uninitialize()][SUCCESS] swapchainImageView_array freed
DEBUG:[uninitialize()][SUCCESS] swapchainImage_array freed
DEBUG:[uninitialize()][SUCCESS] vkDestroySwapchainKHR()
DEBUG:[uninitialize()][SUCCESS] vkDestroySurfaceKHR()
DEBUG:[uninitialize()][SUCCESS] vkDestroyDevice()
DEBUG:[uninitialize()][SUCCESS] vkDestroyInstance()
DEBUG:------------------------------------Done [uninitialize()]------------------------------------

DEBUG:[uninitialize()] Debug File Closed
